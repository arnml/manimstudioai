name: Security and Dependency Checks

on:
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        pip install safety pip-audit

    - name: Check Python dependencies for vulnerabilities
      run: |
        cd backend && safety check -r requirements.txt || true
        cd ../manim-worker && safety check -r requirements.txt || true

    - name: Audit Python dependencies
      run: |
        cd backend && pip-audit -r requirements.txt || true
        cd ../manim-worker && pip-audit -r requirements.txt || true

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Node.js dependencies
      run: |
        cd frontend && npm ci

    - name: Audit Node.js dependencies
      run: |
        cd frontend && npm audit --audit-level moderate || true

  docker-security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, manim-worker]
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t ${{ matrix.service }}:test ./${{ matrix.service }}

    - name: Run Trivy on Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ matrix.service }}:test'
        format: 'table'
        exit-code: '0'

  secrets-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified